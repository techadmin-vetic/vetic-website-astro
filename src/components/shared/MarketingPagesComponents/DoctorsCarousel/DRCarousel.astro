---
import { GETAllDoctorsSiteDataByLocation } from "@api/api_functions";
import CarouselContainer from "@components/ui/CarouselContainer.astro";
// import type { IAllDoctorsCarouselProps } from "@components/pages/pages_props_interface";
import type { IAllDoctorsCarouselProps } from "@components/pages/PagePropsInterface/page_props_interface";

import DoctorCard from "../DoctorCards/DoctorCard.astro";
import DoctorCardV1 from "../DoctorCards/DoctorCardV1.astro";

const { heading, headingSuffix, hideHeading, variant, location } =
  Astro.props as IAllDoctorsCarouselProps;

const getDoctorsResponce = async () => {
  const response = await GETAllDoctorsSiteDataByLocation(location);
  if (response.status) {
    return response.data;
  } else {
    return [];
  }
};
const doctors = await getDoctorsResponce().then((data) => data);

// Function for Pet Grooming to generate random number between 300 and 1000
function getRandomPetNumber(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}
// Function for Doctors to generate random Rating 
function getRandomRating(min, max) {
  return (Math.random() * (max - min) + min).toFixed(1);
}
---

{
  !hideHeading && (
    <div class="w-full pr-8 sm:px-16 sm:pr-24 mt-0">
      <div class="mx-auto text-left">
        <h2 class="text-lg ml-6 sm:ml-4 font-bold tracking-tight text-gray-900 sm:text-xl lg:text-3xl">
          {heading}
          {headingSuffix}
        </h2>
      </div>
    </div>
  )
}
<div class="w-full mx-auto sm:h-[18rem] mt-2 mb-2 sm:px-2">
  <CarouselContainer carouselId="doctors-carousel">
    {
      doctors && doctors?.length > 0 ? (
        doctors.map((doctor) => {
          return variant === "OLD" ? (
            <DoctorCard
              displayName={doctor.display_name}
              doctorName={doctor.name}
              experience={doctor.experience}
              expertise={doctor.expertise}
              imageUrl={doctor.image_url}
            />
          ) : (
            <DoctorCardV1
              displayName={doctor.display_name}
              doctorName={doctor.name}
              experience={doctor.experience}
              expertise={doctor.expertise}
              totalGrooming={getRandomPetNumber(200, 400)}
              imageUrl={doctor.image_url}
              rating={getRandomRating(4.8, 5)}
            />
          );
        })
      ) : (
        <div role="status" class="border-2 h-0 w-full hidden">
          <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 mb-4" />
          <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 max-w-[360px] mb-2.5" />
          <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 mb-2.5" />
          <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 max-w-[330px] mb-2.5" />
          <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 max-w-[300px] mb-2.5" />
          <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 max-w-[360px]" />
          <span class="sr-only">Loading...</span>
        </div>
      )
    }
  </CarouselContainer>
</div>

<script>
  import Flickity from "flickity";
  import "flickity/css/flickity.css";
  var elem = document.querySelector(".doctors-carousel");
  new Flickity(elem, {
    // options
    cellAlign: "left",
    contain: true,
    pageDots: false,
    wrapAround: true,
    pauseAutoPlayOnHover: false,
    prevNextButtons: false,
    autoPlay: 1500,
  });
</script>
