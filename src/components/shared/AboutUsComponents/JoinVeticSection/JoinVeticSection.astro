---
import { Image } from "astro:assets";

const {
  content: { joinVeticSection },
} = Astro.props;
---

<div class="bg-white py-10">
  <div class="container mx-auto w-11/12">
    <div class="flex flex-col md:flex-row">
      <!-- Background Image Section -->
      <div
        class="w-full md:w-1/2 bg-cover rounded-xl bg-center h-80 md:h-auto relative overflow-hidden"
      >
        <Image
          src={joinVeticSection.desktopImage}
          alt="Join Vetic"
          width={500}
          height={500}
          class="w-full h-full object-cover"
        />
        <div class="absolute bottom-4 left-4 flex flex-wrap gap-2">
          <span
            class="bg-white bg-opacity-90 rounded-xl px-3 py-2 text-sm font-semibold text-gray-700"
          >
            #{joinVeticSection.imageButton1}
          </span>
          <span
            class="bg-white bg-opacity-90 rounded-xl px-3 py-2 text-sm font-semibold text-gray-700"
          >
            #{joinVeticSection.imageButton2}
          </span>
        </div>
      </div>

      <!-- Form Section -->
      <div class="w-full md:w-1/2 md:pl-12 mt-8 md:mt-0">
        <h2 class="text-3xl md:text-5xl font-primaryFont text-gray-900 mb-4">
          Passionate About Pets? <span class="text-primaryFontColor"
            >Join Vetic and Make a Difference!</span
          >
        </h2>

        <form class="space-y-4 mt-8" id="joinVeticForm">
          <div class="sm:flex items-center justify-between">
            <div class="sm:w-[48%]">
              <label class="text-gray-800 text-sm font-primaryFont" for="name">
                Enter Your Name
              </label>
              <input
                type="text"
                id="name"
                name="name"
                placeholder="Enter Your Name"
                class="w-full px-4 py-2 mt-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primaryColor"
                required
              />
              <p id="nameError" class="text-red-500 text-xs mt-1"></p>
            </div>
            <div class="sm:w-[48%] sm:mt-0 mt-4">
              <label
                class="text-gray-800 text-sm font-primaryFont"
                for="mobile"
              >
                Enter Your Mobile Number
              </label>
              <input
                type="tel"
                id="mobile"
                name="mobile"
                placeholder="Enter Mobile Number"
                class="w-full px-4 py-2 mt-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primaryColor"
                required
              />
              <p id="mobileError" class="text-red-500 text-xs mt-1"></p>
            </div>
          </div>
          <div>
            <label for="cv" class="block text-sm font-medium text-gray-700">
            </label>
            <input
              type="file"
              id="cv"
              name="cv"
              accept=".pdf,.doc,.docx"
              class="mt-1 block w-full text-sm text-gray-600
                     file:mr-4 file:py-2 file:px-4
                     file:rounded-full file:border-0
                     file:text-sm file:font-semibold
                     file:bg-violet-50 file:text-violet-700
                     hover:file:bg-violet-100"
              required
            />
          </div>
          <div>
            <button
              type="submit"
              class="sm:w-[30%] w-full bg-gray-950 mt-4 text-white py-3 font-primaryFont text-xl px-4 rounded-full hover:bg-gray-800 transition duration-300"
            >
              Submit
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    console.log("Script loaded");
    const form = document.getElementById("joinVeticForm") as HTMLFormElement;
    const nameInput = form.querySelector("#name") as HTMLInputElement;
    const mobileInput = form.querySelector("#mobile") as HTMLInputElement;
    const fileInput = form.querySelector("#cv") as HTMLInputElement;
    const nameError = document.getElementById("nameError") as HTMLElement;
    const mobileError = document.getElementById("mobileError") as HTMLElement;

    const validateName = (name: string): boolean => {
      const nameRegex = /^[a-zA-Z\s]+$/;
      return nameRegex.test(name) && name.length >= 2 && name.length <= 50;
    };

    const validateMobile = (mobile: string): boolean => {
      const mobileRegex = /^[0-9]{10}$/;
      return mobileRegex.test(mobile);
    };

    nameInput.addEventListener("input", (e) => {
      const name = (e.target as HTMLInputElement).value.trim();
      if (!validateName(name)) {
        nameError.textContent =
          "Please enter a valid name (only letters and spaces, 2-50 characters).";
        nameInput.classList.add("border-red-500");
      } else {
        nameError.textContent = "";
        nameInput.classList.remove("border-red-500");
      }
    });

    mobileInput.addEventListener("input", (e) => {
      const mobile = (e.target as HTMLInputElement).value
        .replace(/\D/g, "")
        .slice(0, 10);
      mobileInput.value = mobile;

      if (!validateMobile(mobile)) {
        mobileError.textContent =
          "Please enter a valid 10-digit mobile number.";
        mobileInput.classList.add("border-red-500");
      } else {
        mobileError.textContent = "";
        mobileInput.classList.remove("border-red-500");
      }
    });

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      console.log("Form submitted");

      const name = nameInput.value.trim();
      const mobile = mobileInput.value.trim();
      const file = fileInput.files?.[0];

      console.log("Name:", name);
      console.log("Mobile:", mobile);
      console.log("File:", file);

      if (!validateName(name) || !validateMobile(mobile) || !file) {
        return;
      }

      try {
        const formData = new FormData();
        formData.append("name", name);
        formData.append("mobile", mobile);
        formData.append("file", file);

        const response = await fetch(
          "https://org.vetic.in/clinic-org/upload/doctor-details/",
          {
            method: "POST",
            headers: {
              Authorization:
                "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTE2MjM3MzgsImlhdCI6MTcxMTAxODkzOCwic3ViIjp7Im1vYmlsZSI6IjgxMTIyMzU1ODEiLCJ1c2VyX2lkIjoiYzFlODE5OTktMzYwZS00ZDEwLTg2Y2QtYjE0NjE0YjhlNWRhIn19.1-6EGu5tP-Vv6KKcpjfNC4me-EEAJ70TcS2ffY6qGXE",
            },
            body: formData,
          }
        );

        if (response.ok) {
          alert("Form submitted successfully!");
          form.reset();
        } else {
          throw new Error("Form submission failed");
        }
      } catch (error) {
        console.error("Error:", error);
        alert("An error occurred while submitting the form. Please try again.");
      }
    });
  });
</script>
